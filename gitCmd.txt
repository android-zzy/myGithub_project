git config user.name	查看用户名
git config user.email	查看邮件地址

pwd 显示当前所在目录

cd e:/git_project	切换到 e:/git_project目录下

git status	查看仓库状态(时刻关注仓库的状态)

git init 初始化仓库

ll	或者
ls -ah 列出当前目录下的所有文件/文件夹


添加文件到仓库：
git add --all	添加文件到暂存区
git add readme.txt 把文件添加到git仓库 可以多次添加。  git add命令实际上就是把要提交的所有修改放到暂存区（Stage）
git commit -m "提交说明" 把文件提交到仓库  -m后面输入的是本次提交的说明 ""必须要加双引号。	git commit一次性把暂存区的所有修改提交到分支。

git diff	查看修改的内容

查看历史记录
git log		显示出来的是版本号 + 版本提交说明
git log --pretty=oneline

版本回退	HEAD表示当前版本，HEAD^表示上一个版本，HEAD^表示上上个版本，HEAD~100表示往上100个版本
git reset --hard HEAD^	回退到上个版本
git reset --hard commit_id	移动到指定版本，版本id可以只写前面几位

后悔药：
git reflog	用来记录每一次命令

git是跟踪修改的！！！

撤销修改
git checkout -- <file>	撤销工作区。让readme文件在工作区的修改全部撤销。让这个文件回到最近一次git commit或git add时的状态。 
git reset HEAD <file>	撤销暂存区。可以把暂存区的修改撤销掉（unstage），重新放回工作区。然后再参考撤销工作区
						撤销版本库。参考版本回退命令，前提是还没有推送到远程库。

删除文件						
git rm	用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。
情况一：文件从版本库删除
git rm 然后 git commit -m "" 
情况二：删错了
git checkout -- <file>	把误删的文件恢复到最新版本

git checkout	其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。

取消代理
git config --global --unset http.proxy
git config --global --unset https.proxy

设置代理
git config --global http.proxy http://127.0.0.1:7890 
git config --global https.proxy http://127.0.0.1:7890

将修改推送至远程
git push 	把本地库的内容推送到远程。
git push origin master	把本地master分支的最新修改推送至GitHub，现在，你就拥有了真正的分布式版本库！

git remote -v	查看远程库信息
git remote rm <name>	删除远程库(解除了本地和远程的绑定关系)

git remote add origin git@github.com:android-zzy/CloneTest.git	要关联一个远程库

关联一个远程库时必须给远程库指定一个名字，origin是默认习惯命名；

git push -u origin master	关联后，使用此命令，第一次推送master分支的所有内容；

git push origin master	此后，每次本地提交后，只要有必要，就可以使用命令推送最新修改；

从远程库克隆
git clone git@github.com:michaelliao/gitskills.git




配置相关----------------
配置别名
git config --global alias.st status
git config --global alias.co checkout
git config --global alias.ci commit
git config --global alias.br branch
git config --global alias.unstate 'reset HEAD'
git config --global alias.last 'log -l'
git config --global alias.lg "log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"

git config --list 查看当前Git环境所有配置
git config --global user.name "name" 配置全局的用户名
git config --global user.email "email"	配置全局的邮件地址

ssh-keygen -t rsa -C "android_zzy@163.com"	生成SSH key

git remote set-url origin git@github.com:someaccount/someproject.git	调整url

查看相关
cat <file>	查看文件内容



vi <file>
输入a，进入插入状态
按下esc键，进入命令状态





